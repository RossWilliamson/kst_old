Index: src/open.c
===================================================================
--- src/open.c	(Revision 489)
+++ src/open.c	(Arbeitskopie)
@@ -39,10 +39,13 @@
 #include <libgen.h>
 #endif
 
+
+
 /* attempt to open or create a new dirfile - set error appropriately */
 static FILE* _GD_CreateDirfile(DIRFILE* D, const char* format_file,
     const char* filedir)
 {
+  FILE* fp = NULL;
   struct stat statbuf;
   char fullname[FILENAME_MAX];
   DIR* dir;
@@ -50,7 +53,6 @@
   struct dirent* lamb;
   int dir_error = 0;
   int format_error = 0;
-  FILE* fp = NULL;
 
   dtrace("%p, \"%s\", \"%s\"", D, format_file, filedir);
 
Index: src/flush.c
===================================================================
--- src/flush.c	(Revision 489)
+++ src/flush.c	(Arbeitskopie)
@@ -26,7 +26,6 @@
 #include <errno.h>
 #include <sys/types.h>
 #include <sys/stat.h>
-#include <unistd.h>
 #include <time.h>
 #include <limits.h>
 #endif
@@ -716,6 +715,7 @@
   return (D->error == GD_E_OK) ? 0 : -1;
 }
 
+#ifndef _MSC_VER
 #define GD_VERS_GE_1  0xFFFFFFFFFFFFFFFELLU
 #define GD_VERS_GE_2  0xFFFFFFFFFFFFFFFCLLU
 #define GD_VERS_GE_3  0xFFFFFFFFFFFFFFF8LLU
@@ -734,7 +734,28 @@
 #define GD_VERS_LE_6  0x000000000000007fLLU
 #define GD_VERS_LE_7  0x00000000000000ffLLU
 #define GD_VERS_LE_8  0x00000000000001ffLLU
+#else
+#define GD_VERS_GE_1  0xFFFFFFFFFFFFFFFELU
+#define GD_VERS_GE_2  0xFFFFFFFFFFFFFFFCLU
+#define GD_VERS_GE_3  0xFFFFFFFFFFFFFFF8LU
+#define GD_VERS_GE_4  0xFFFFFFFFFFFFFFF0LU
+#define GD_VERS_GE_5  0xFFFFFFFFFFFFFFE0LU
+#define GD_VERS_GE_6  0xFFFFFFFFFFFFFFC0LU
+#define GD_VERS_GE_7  0xFFFFFFFFFFFFFF80LU
+#define GD_VERS_GE_8  0xFFFFFFFFFFFFFF00LU
 
+#define GD_VERS_LE_0  0x0000000000000001LU
+#define GD_VERS_LE_1  0x0000000000000003LU
+#define GD_VERS_LE_2  0x0000000000000007LU
+#define GD_VERS_LE_3  0x000000000000000fLU
+#define GD_VERS_LE_4  0x000000000000001fLU
+#define GD_VERS_LE_5  0x000000000000003fLU
+#define GD_VERS_LE_6  0x000000000000007fLU
+#define GD_VERS_LE_7  0x00000000000000ffLU
+#define GD_VERS_LE_8  0x00000000000001ffLU
+#endif
+
+
 uint64_t _GD_FindVersion(DIRFILE *D)
 {
   unsigned int i;
Index: src/ascii.c
===================================================================
--- src/ascii.c	(Revision 489)
+++ src/ascii.c	(Arbeitskopie)
@@ -25,7 +25,6 @@
 #include <inttypes.h>
 #include <sys/stat.h>
 #include <sys/types.h>
-#include <unistd.h>
 #include <fcntl.h>
 #include <stdio.h>
 #include <string.h>
Index: src/mod.c
===================================================================
--- src/mod.c	(Revision 489)
+++ src/mod.c	(Arbeitskopie)
@@ -30,6 +30,10 @@
 #include <libgen.h>
 #endif
 
+#ifdef max
+#undef max
+#endif
+
 static unsigned int max(unsigned int A, unsigned int B)
 {
   return (A > B) ? A : B;
Index: src/internal.h
===================================================================
--- src/internal.h	(Revision 489)
+++ src/internal.h	(Arbeitskopie)
@@ -27,18 +27,32 @@
 #endif
 
 #include "getdata.h"
+
+
 #include <string.h>
+#include <errno.h>
+#include <fcntl.h>
 
 #ifdef __APPLE__
 typedef off_t off64_t;
 #endif
 
+#ifdef _MSC_VER
+typedef size_t ssize_t;
+typedef int mode_t;
+#define fsync _commit
+#define snprintf _snprintf
+#endif
+
+
 #ifdef GD_NO_C99_API
 #  define GD_DCOMPLEXP_t double *
 #  define GD_DCOMPLEXA(v) double v[2]
 #  define GD_DCOMPLEXV(v) double v[][2]
+#ifndef _MSC_VER 
 #  define cabs(z)  sqrt((z)[0] * (z)[0] + (z)[1] * (z)[1])
 #  define carg(z)  atan2((z)[1], (z)[0])
+#endif
 #  define creal(z) ((z)[0])
 #  define cimag(z) ((z)[1])
 #  define _gd_a2c _gd_c2c
@@ -86,6 +100,7 @@
 #endif
 #endif
 
+
 /* For FILENAME_MAX */
 #include <stdio.h>
 
@@ -122,7 +137,11 @@
 # define __wur
 #endif
 
+#ifdef _MSC_VER
+#define __gd_unused
+#else
 #define __gd_unused __attribute__ (( unused ))
+#endif
 
 /* disable the "unspecified order" remark in ICC */
 #ifdef __INTEL_COMPILER
@@ -253,7 +272,7 @@
 #define rmdir _rmdir
 #endif
 
-#if defined __CYGWIN__ || defined __APPLE__
+#if defined __CYGWIN__ || defined __APPLE__  || _MSC_VER
 #  define gd_stat64 stat
 #elif HAVE_STAT64
 #  define gd_stat64 stat64
@@ -265,7 +284,7 @@
 typedef struct stat64 gd_stat64_t;
 #elif HAVE_STRUCT___STAT64
 typedef struct __stat64 gd_stat64_t;
-#elif defined __CYGWIN__ || defined __APPLE__
+#elif defined __CYGWIN__ || defined __APPLE__ || _MSC_VER
 typedef struct stat gd_stat64_t;
 #endif
 
@@ -285,6 +304,7 @@
 #define write _write
 #endif
 
+
 #ifndef HAVE_GETDELIM
 ssize_t getdelim(char**, size_t*, int, FILE*);
 #endif
@@ -719,7 +739,13 @@
 int _GD_SlimClose(struct _gd_raw_file* file);
 off64_t _GD_SlimSize(struct _gd_raw_file* file, gd_type_t data_type);
 
-static inline int entry_cmp(const void *a, const void *b)
+#ifdef _MSC_VER
+#define _gd_static_inline static
+#else
+#define _gd_static_inline static inline
+#endif
+
+_gd_static_inline int entry_cmp(const void *a, const void *b)
 {
   return strcmp((*(gd_entry_t**)a)->field, (*(gd_entry_t**)b)->field);
 }
Index: src/getdata.h.in
===================================================================
--- src/getdata.h.in	(Revision 489)
+++ src/getdata.h.in	(Arbeitskopie)
@@ -56,10 +56,18 @@
  *    size_t, off_t, __REDIRECT, &c., if present
  */
 #include <sys/types.h>
+
+#ifdef HAVE_UNISTD_H
 #include <unistd.h>
+#endif
 
+#ifdef HAVE_STDINT_H
+#include <stdint.h>
+#endif
+
+
 /* If this symbol is defined here, the C99-API is not present in the library */
-#undef GD_NO_C99_API
+// TODO check for C99 #undef GD_NO_C99_API
 
 #if defined(GD_NO_C99_API) && ! defined(GD_C89_API)
 # define GD_C89_API
@@ -225,9 +233,15 @@
 /* GD_NO_ENTRY is not part of this count */
 #define GD_N_ENTYPES 14
 
+#ifdef _MSC_VER // TODO
+typedef short _gd_int16_t;
+typedef unsigned short _gd_uint16_t;
+typedef __int64 _gd_int64_t;
+#else
 #undef _gd_int16_t
 #undef _gd_uint16_t
 #undef _gd_int64_t
+#endif
 #if ! defined GD_C89_API
 #  include <inttypes.h>
 #  define GD_DCOMPLEXM(v) double _Complex v
Index: src/raw.c
===================================================================
--- src/raw.c	(Revision 489)
+++ src/raw.c	(Arbeitskopie)
@@ -24,7 +24,7 @@
 #include <stdlib.h>
 #include <sys/stat.h>
 #include <sys/types.h>
-#include <unistd.h>
+
 #include <fcntl.h>
 #include <errno.h>
 #endif
