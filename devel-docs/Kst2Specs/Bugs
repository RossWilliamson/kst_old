Bugs in Build System:
  -picks up libraries in lib/X11 before local libs
  -doesn't support 'make install' nor DESTDIR
---------

Auto-labels, and '_' in field names:
When plots are using name-based auto-labels, any '_' in field names gets interpreted as a subscript.
There needs to be an option to somehow escape these when using them in a label.
*cbn*

---------

Tooltips everywhere.

---------

With multiple plots, when zooming one changes the size properties of
another (due to axis label changes, for example), the axes labels on the
non-modified plot(s) can get garbled until the mouse is moved over them.

----------

kst reads live dirfiles less efficiently than before. �On a shitty
computer (devlin666), kst1.7 can display 200 frames of 24 bolometer
channels (100Hz samples; 20 samples per frame) with a 500ms kst update
timer, and only use about 20% of the cpu and the computer will still
seem 'responsive enough'. �kst2 under the same conditions, except with
2000ms kst update timer uses about 55% of the cpu and the computer (and
kst) seem more sluggish. �

---------

The first pane of the data wizard should be reading directories in
the background, instead of in the foreground where it steals X focus
until the directory is read. �I ran into a interminable-focus-stealing
problem where kst was attempting to read a dead NFS mount. �Required an
X restart.
*Mike*
--------

General drawing 'flicker' and missing regions in drawing with openGL enabled:
OpenGL is qualitatively much faster, but on my laptop with Intel graphics, 
embedded, and running opengl with kwin, there is lots of flicker, and lots
of things simply not drawn.

Notes:
 - We are doing everything correctly according to the Qt documentation.

 - This can be reproduced using the Qt example code.  Corruption extends beyond
   Kst, and can be seen in all other apps showing drawing problems. while QGLWidget
   is running.

 - Sample Qt code:
    http://labs.trolltech.com/blogs/2008/06/27/accelerate-your-widgets-with-opengl/

 - Performance will be improved in future versions of Qt and is a known issue.
   http://labs.trolltech.com/blogs/2008/02/04/qt-44-and-painting-performance/

 - This bug is a platform specific to X11 and is documented by ubuntu with a work around.
   https://wiki.ubuntu.com/RedirectedDirectRendering

 - Sample app from Qt runs correctly under Windows, no reported problems with Mac.

--------

PlotMarginStandardization is applied inconsistently.
- Note: Fixed many cases.  After applying layout, plotBorders are set to Dirty, this may not be
correct.  A number of margins are not updated within the changed plot currently preventing full
validation.
*Mike*
--------

SharedAxisBox plot sharing occasionally breaks for no apparent reason.
Have not identified a pattern or cause as of yet.
*Mike*
--------

Fragility in moving parents:
  create a plot.
  Put a child box in the plot.
  Rapidly resize the plot.  Sometimes the box will either drift or loose parenting altogether.
  (Editorial: Fundamentally, I think this is because qt's QGraphics system has been used to track placement
  of objects, and QGraphics doesn't have the right model of what we are doing.)

  Note:  This is still causing parenting to fail.  Updates are required to prevent reparenting on parent resize.
*Mike*
---------

qgraphicsitem_cast is not setup correctly and causing bugs.
  A number of bugs are occurring as the result of qgraphicsitem_cast failing.  All ViewItem objects will need to be
  updated to support type and casts re-evaluated.

  This causes context menu bugs.

  Object selection bugs.
*Mike*
---------
