include(MergedFilesBuild)


macro(kst_init name)
	set(kst_name ${name})
	set(kst_${kst_name}_dont_merge)
	set(kst_${kst_name}_ignore)
endmacro()


macro(kst_files_find folder)
	set(_folder ${KST_DIR}/${folder})
	file(GLOB _sources     ${_folder}/*.c) 
	file(GLOB _sources_cpp ${_folder}/*.cpp)
	file(GLOB _headers     ${_folder}/*.h)
	file(GLOB _ui_files    ${_folder}/*.ui)
	set(kst_${kst_name}_folder  ${_folder})
	kst_files_remove(_sources     ${kst_${kst_name}_ignore})
	kst_files_remove(_sources_cpp ${kst_${kst_name}_ignore})
	kst_files_remove(_headers     ${kst_${kst_name}_ignore})
	set(_mocs)
	qt4_wrap_cpp(_mocs ${_headers} OPTIONS "-nw")
	set(_uis)
	qt4_wrap_ui(_uis ${_ui_files})
	set(kst_${kst_name}_sources ${_sources} ${_sources_cpp} ${_mocs} ${_uis})
	set(kst_${kst_name}_headers ${_headers})
	set(kst_${kst_name}_mocs    ${_mocs})
	set(kst_${kst_name}_ui_files ${_ui_files})
	set(kst_${kst_name}_uis     ${_uis})
	set(kst_${kst_name}_includes ${_folder} ${CMAKE_CURRENT_BINARY_DIR} CACHE STRING "Include dir for ${kst_name}" FORCE)
	source_group("Ui" FILES ${_mocs} ${_ui_files})
	source_group("Generated" FILES ${_mocs} ${_uis})
endmacro()


macro(kst_dont_merge)
	set(kst_${kst_name}_dont_merge)
	foreach(_it ${ARGV})
		set(kst_${kst_name}_dont_merge ${kst_${kst_name}_dont_merge} ${kst_${kst_name}_folder}/${_it})
	endforeach()
endmacro()


macro(kst_add_library type)
	include_directories(${kst_${kst_name}_folder} ${CMAKE_CURRENT_BINARY_DIR})
	string(TOUPPER BUILD_${kst_name} _build_macro)
	add_definitions(-D${_build_macro})
	if(kst_merge_files)
		set(merge_rebuild 0)
		foreach(_it ${kst_${kst_name}_dont_merge})
			list(REMOVE_ITEM kst_${kst_name}_sources ${_it})
		endforeach()
		merged_files_build(merged kst_${kst_name}_sources)
		set(depends_moc_uic ${kst_${kst_name}_headers} ${kst_${kst_name}_uis} ${kst_${kst_name}_ui_files} ${kst_${kst_name}_mocs})
		set_source_files_properties(merged_const.cpp   PROPERTIES OBJECT_DEPENDS "${depends_moc_uic}")
		set_source_files_properties(merged_touched.cpp PROPERTIES OBJECT_DEPENDS "${depends_moc_uic}")
		add_library(${kst_name} ${type} ${merged_files} ${kst_${kst_name}_dont_merge} ${kst_${kst_name}_headers} ${kst_${kst_name}_uis})
	else()		
		add_library(${kst_name} ${type} ${kst_${kst_name}_sources} ${kst_${kst_name}_headers})
	endif()
	target_link_libraries(${kst_name} ${QT_QTCORE_LIBRARY} ${QT_QTGUI_LIBRARY} ${QT_QTXML_LIBRARY})
endmacro()


macro(kst_init_plugin dir)
	set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/plugin)
	include_directories(${CMAKE_BINARY_DIR}/${dir})
	kst_include_directories(kstcore kstmath kstwidgets)
	set(kst_plugin_dir ${dir})
	set(kst_plugin_prefix ${ARGN})
endmacro()


macro(kst_add_plugin folder name)
	set(_name kstplugin_${kst_plugin_prefix}_${folder}_${name})
	string(REPLACE . _  _name ${_name})
	string(REPLACE / _  _name ${_name})
	string(REPLACE __ _ _name ${_name})
	string(REPLACE __ _ _name ${_name})
	kst_init(${_name})
	kst_files_find(${kst_plugin_dir}/${folder}/${name})
	add_library(${kst_name} SHARED ${kst_${kst_name}_sources} ${kst_${kst_name}_headers})
	kst_link(kstcore kstmath kstwidgets)
endmacro()


macro(kst_include_directories)
	foreach(_it ${ARGV})
		include_directories(${kst_${_it}_includes})
	endforeach()
endmacro()


macro(kst_link)
	target_link_libraries(${kst_name} ${ARGV})
endmacro()


macro(kst_files_ignore)	
	set(kst_${kst_name}_ignore ${kst_${kst_name}_ignore} ${ARGV})
endmacro()


macro(kst_files_remove list)	
	foreach(_item ${ARGN})
		set(_file ${kst_${kst_name}_folder}/${_item})
		if(${list})
			list(REMOVE_ITEM ${list} ${_file}.cpp ${_file}.c ${_file}.h)
		endif()
	endforeach()
endmacro()


macro(kst_add_resources filepath)
	qt4_add_resources(_rcc ${KST_DIR}/${filepath})
	set(kst_${kst_name}_sources ${kst_${kst_name}_sources} ${_rcc})
endmacro()


macro(kst_option _name _description _default _sys)
	set(_msg OFF)
	if(${_sys} MATCHES "gcc")
		set(_system CMAKE_COMPILER_IS_GNUCXX)
	else()
		set(_system ${_sys})
	endif()
	if(${_system} MATCHES "all")
		option(kst_${_name} ${_description} ${_default})
		set(_msg ON)
	else()
		if(${${_system}})
			option(kst_${_name} ${_description} ${_default})
			set(_msg ON)
		endif()
	endif()
	if(_msg)
		string(SUBSTRING "kst_${_name}                            " 0 25 _var)
		string(SUBSTRING "${kst_${_name}}     " 0 4 _val)
		message(STATUS "${_var}: ${_val}   (${_description})")
	endif()
endmacro()

		