Index: kstobject.h
===================================================================
--- kstobject.h	(revision 480902)
+++ kstobject.h	(working copy)
@@ -100,7 +100,9 @@
     virtual QStringList tagNames() {
       QStringList rc;
       for (typename QValueList<T>::ConstIterator it = QValueList<T>::begin(); it != QValueList<T>::end(); ++it) {
+        (*it)->readLock();
         rc << (*it)->tagName();
+        (*it)->readUnlock();
       }
       return rc;
     }
@@ -109,25 +111,33 @@
     QStringList tagNames() const {
       QStringList rc;
       for (typename QValueList<T>::ConstIterator it = QValueList<T>::begin(); it != QValueList<T>::end(); ++it) {
+        (*it)->readLock();
         rc << (*it)->tagName();
+        (*it)->readUnlock();
       }
       return rc;
     }
 
     virtual typename QValueList<T>::Iterator findTag(const QString& x) {
       for (typename QValueList<T>::Iterator it = QValueList<T>::begin(); it != QValueList<T>::end(); ++it) {
+        (*it)->readLock();
         if (*(*it) == x) {
+          (*it)->readUnlock();
           return it;
         }
+        (*it)->readUnlock();
       }
       return QValueList<T>::end();
     }
 
     virtual typename QValueList<T>::ConstIterator findTag(const QString& x) const {
       for (typename QValueList<T>::ConstIterator it = QValueList<T>::begin(); it != QValueList<T>::end(); ++it) {
+        (*it)->readLock();
         if (*(*it) == x) {
+          (*it)->readUnlock();
           return it;
         }
+        (*it)->readUnlock();
       }
       return QValueList<T>::end();
     }
@@ -135,9 +145,12 @@
     virtual int findIndexTag(const QString& x) const {
       int i = 0;
       for (typename QValueList<T>::ConstIterator it = QValueList<T>::begin(); it != QValueList<T>::end(); ++it) {
+        (*it)->readLock();
         if (*(*it) == x) {
+          (*it)->readUnlock();
           return i;
         }
+        (*it)->readUnlock();
         i++;
       }
       return -1;
@@ -206,7 +219,9 @@
     virtual QStringList tagNames() {
       QStringList rc;
       for (typename QMap<QString,T>::ConstIterator it = QMap<QString,T>::begin(); it != QMap<QString,T>::end(); ++it) {
+        it.data()->readLock();
         rc << it.data()->tagName();
+        it.data()->readUnlock();
       }
       return rc;
     }
@@ -215,22 +230,28 @@
     QStringList tagNames() const {
       QStringList rc;
       for (typename QMap<QString,T>::ConstIterator it = QMap<QString,T>::begin(); it != QMap<QString,T>::end(); ++it) {
+        it.data()->readLock();
         rc << it.data()->tagName();
+        it.data()->readUnlock();
       }
       return rc;
     }
 
     // Careful - sets key(value) == value->tagName();
     typename QMap<QString,T>::iterator insertObject(const T& value) {
+      KstReadLocker ml(value);
       return QMap<QString,T>::insert(value->tagName(), value);
     }
 
     typename QMap<QString,T>::iterator findTag(const QString& tag) {
       typename QMap<QString,T>::iterator i;
       for (i = QMap<QString,T>::begin(); i != QMap<QString,T>::end(); ++i) {
+        i.data()->readLock();
         if (i.data()->tagName() == tag) {
+          i.data()->readUnlock();
           break;
         }
+        i.data()->readUnlock();
       }
       return i;
     }
